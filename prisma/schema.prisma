// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @map("_id") @db.String
  scales         Int      @default(0)
  banned         Boolean  @default(false)
  enablePayments Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

type Channels {
  logs      String @default("0000000000000000000")
  modLogs   String @default("0000000000000000000")
  adminLogs String @default("0000000000000000000")
  funnies   String @default("0000000000000000000")
}

type Roles {
  mods     String[] @default([])
  verified String   @default("0000000000000000000")
}

type Message {
  id        String @default("0000000000000000000")
  channelId String @default("0000000000000000000")
}

type Messages {
  verification Message
}

type Features {
  scales       Boolean @default(true)
  logging      Boolean @default(true)
  modLogging   Boolean @default(true)
  adminLogging Boolean @default(true)
  moderation   Boolean @default(true)
  funnies      Boolean @default(true)
}

model Guild {
  id         String   @id @map("_id") @db.String
  channelIds Channels
  roleIds    Roles
  messages   Messages
  features   Features
  test       String[] @default([])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("guilds")
}

model Log {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String
  targetId  String
  modId     String
  logId     Int
  reason    String
  type      Int
  embed   String
  undoBy    DateTime?
  undone    Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("logs")
}

type FunnieMessage {
  id        String
  channelId String
  embedId   String
}

model Funnie {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  guildId     String
  userId      String
  normalCount Int
  modCount    Int
  message     FunnieMessage
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("funnies")
}
